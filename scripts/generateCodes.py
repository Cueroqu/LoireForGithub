import time
import sys
import xml.etree.ElementTree as ET

def getDefine(outputfile):
    define = "Loire"
    spoutput = outputfile.split(".")
    for s in spoutput:
        define += "_" + s
    return define

def writeHead(f, outputfile):
    f.write("//\n")
    f.write("// {0}\n".format(outputfile))
    f.write("//\n")
    f.write("// Loire\n")
    f.write("// Created by Cuero Zhun Qu on {0}.\n".format(time.strftime("%y-%m-%d")))
    f.write("// Generated by python script.\n");
    f.write("// Please don't edit this file.\n");
    f.write("//\n")
    f.write("//\n")
    f.write("\n")
    define = getDefine(outputfile)
    f.write("#ifndef {0}\n".format(define))
    f.write("#define {0}\n".format(define))
    f.write("\n")

def writeEnd(f):
    f.write("\n")
    f.write("#endif")

def generateCppfile(filename, outputfile, weapon):
    f = open("../Classes/Arsenal/" + outputfile, "w")
    writeHead(f, outputfile)

    f.write("enum {0} {{".format(outputfile.split(".")[0]))
    vacants = {"Weapon" : "VACANT", "Techmod" : "VACANTTECH"}
    contents = "{0} = 0".format(vacants[weapon]) if weapon in vacants else ""
    prefix = len(contents)
    tree = ET.parse("../Resources/Arsenal/" + filename)
    root = tree.getroot()
    for child in root:
        contents += ", {0} = {1}".format(child.attrib['name'], child.attrib['type'])

    f.write("{0}}};\n".format(contents if weapon in vacants else contents[2:]))
    writeEnd(f)

    f.close()

if __name__ == "__main__" :
    if (len(sys.argv) < 2):
        print "Error: Absent of args"
    filename = "{0}Type.xml".format(sys.argv[1])
    outputfile = "{0}Type.h".format(sys.argv[1])
    generateCppfile(filename, outputfile, sys.argv[1])
